lsb_release -i -r
Print vendor and version information of linux distribution.

find / -type f -size +1000k | xargs -n 1 ls -l --block-size=M
Find all files over 1000 kbs and then print the size of each of those
files in mbs.

find . -mtime +10 | xargs -n 1 --no-run-if-empty rm -v
Remove files older than 10 days.  The -n 1 ensure that if there are large numbers of files the
rm command won't be too long, instead a new command will be created for each file.

df -h
Print disk usage.

du -hs <directory>
Print disk usage of some directory, recursive.

lsof
Print open files (which may not be shown in find or ls if the file
has been deleted, but a file descriptor is still open).

ls | xargs -n 1 -i echo \{\}, | xargs -n 4
This command is to illustrate some features of xargs.  The \{\} combined
with -i allow the output from the piped command to be inserted in the
middle of the command xargs is building.  The -n allows some number of
inputs to be combined together.  This will print four items separated
by commas on each line.

abrt-cli list -f | grep Directory | cut -d" " -f 7 | xargs -i -n 1 sh -c 'echo directory {} has UUID; cat {}/uuid; echo '
This command will print all the abrt directories and and a file in the directory.
It uses sh -c to use the directory for 2 commands.

knife search "recipe:zookeeper AND environment:dev" -a ipaddress | grep ipaddress | tail -1 | tr -s " " | cut -d":" -f 2
Similar to other cut examples, but this one uses the tr command to trim extra whitespace to assist cut.

echo -n `date +"%Y-%m-%d-%H-%M-%S"`; git log --abbrev-commit --graph --date-order --date=relative --pretty=oneline | head -1 | sed -e 's/^*[ \t]*/_/g' | sed 's/\ /_/g' | sed 's/[^a-zA-Z0-9_]//g'
Simple sed usage example.  Format the latest git log in a particular format.

grep af1518ac-c801-438e-b70d-4fc59e67a079 `lsoc bb1` | sed 's/.*order_sequence: //g' | sed 's/correlation_cl_ord_id.*//g' | sort | uniq --repeated
grep -c af1518ac-c801-438e-b70d-4fc59e67a079 `lsoc bb1` | sed 's/.*order_sequence: //g' | sed 's/correlation_cl_ord_id.*//g'
Command to parse log file for GUID and filter out most of the message.  the first sed removes everything before 'order_sequence: ' and
the second sed removes everything after.  The resuls are then sorted and passed to uniq to check for repeated fields.  To verify no skipped
values, the second command gives the total number.

for i in {1..10}; do command; done
Run a command in a loop on the command line.

abrt-cli list -f | grep Directory | cut -d" " -f 7 | xargs -n 1 abrt-cli rm

curl http://ipecho.net/plain
Get the external IP address of some host as seen by the Internet.

knife node delete NODE_NAME
knife client delete NODE_NAME
rpm -q chef
rpm -e chef-11.4.4-2.el6.x86_64;rm -rf /var/chef/; rm -rf /etc/chef/; rm -rf /opt/chef

tcpdump
-------
tcpdump -D
Lists all the interfaces, the number is used for -i on future commands.

tcpdump -i 1 dst 10.140.18.67 and port 16058
Show all messages from destination and port.

tcpdump -i 1 host 10.140.18.67 and port 16058
Show all message to and from ip and port.

Wireshark Filters
-----------------
ip.src == 10.140.18.67 || ip.dst == 10.140.18.67


Xming
-----
Steps to set up X11 forwarding from RHEL to Windows.
- Install Xming (default installation).
- Install Xmingfonts (required for emacs).
- Install putty.
- Install puttygen.
- In putty configure the following settings:
  - Session -> Saved Sessions Give the session a name
    and save/load it to make sure the rest are not lost.
  - Connection -> Data -> Auto-login username 'debesys'
    (or whatever username you want to log in with)
  - Connection -> Seconds between keep alive 120
  - Copy private key from linux machine into c:\Users\USER\.ssh\tmp_key
    (the keys can be created on a linux machine with ssh-keygen via
     ssh-keygen -t rsa -C "Tom.Weiss@TradingTechnologies.com -f ~/.ssh/windows_to_linux)
    Put the public key in ~/.ssh/authorized_keys on linux host.
    Launch puttygen.
    Select Conversions Menu.
    Open the c:\Users\USER\.ssh\tmp_key file.
    Select the 'Save private key' button and name with extension .ppk.
    SSH -> Auth -> Private key file for authentication -> Browse to the
    ppk file just created.
   - X11 -> Enable X11 Forwarding.
  - Session -> Host <IP of host>
  - Save.

View a file's permissions as numbers.
stat -c '%a' [file]

ssh
---
View fingerprint:
ssh-keygen -lf ~/.ssh/id_rsa.pub

Customize keys used per host via ~/.ssh/config:
Host *github.com
     IdentityFile ~/.ssh/github_rsa
     User git

gnome
-----
To stop cursor from blinking launch gnome-keyboard-properties and uncheck cursor blinking textbox,
use --get to view the current settings.  This command works on versions >= 2.31.3:
gconftool-2 --set /desktop/gnome/interface/cursor_blink --type boolean False
gconftool-2 --set /apps/gnome-terminal/profiles/Default/cursor_blink --type boolean False
gconftool-2 --set /apps/gnome-terminal/profiles/Default/cursor_blink_mode --type string off
General -> Font: Monospace 14
Check 'Use custom default terminal size' 200 columns 25 rows
Colors -> Text Color: #10F015
Colors -> Background Color: #000000
Scrolling -> check Unlimited
To prevent function keys from being caught in emacs -nw mode, open the Keyboard Shortcuts
and uncheck "Enable the menu shortcut key (F10 by default).  Then go through all the
shortcuts and use backspace in combination with clicking to disable the shortcuts mapped
to function keys.


selinux
-------
getenforce
setenforce
/etc/selinux/config
chcon -v -R type=var_log_t /dir1/dir2 (change label)
ls -Z <file> (view label)

networking
----------
Disable ip messaging from local machine to some ip address (e.g., 10.203.0.43).
sudo service iptables start
sudo iptables -A OUTPUT -d "10.203.0.43" -j DROP
sudo iptables -D OUTPUT -d "10.203.0.43" -j DROP
sudo service iptables stop

(stop networking for a while)
sudo service iptables start; sudo iptables -A OUTPUT -d "10.203.0.43" -j DROP; sleep 60; sudo iptables -D OUTPUT -d "10.203.0.43" -j DROP; sudo service iptables stop

Physical ports can be in one of two modes:
1) access (a.k.a., untagged, single vlan)
2) trunk (a.k.a., vlan tagging, dot1q, 802.1q, multiple vlan, multiple layer 3 interfaces)

ifconfig
Prints network information.
ethN is a physical port.  If there is a IPV4 address then the port is in access
mode.  Otherwise the port is in trunk mode.  If you examine the MAC of a vlan
it will correspond to the MAC of one of the physical ports, which is the port
being used by the vlan.

/etc/sysconfig/network-scripts/ifcfg-X
Each file describes a layer 3 interface available to the operating system.

ethtool ethN
Another way to get information about an interface.

lldptool -tnl ethN
(yum install TT-LLDP-SETUP --nogpgcheck)
Package created to provide extra information about switch connections.

/etc/udev/rules.d/70-persistent-net.rules
Contains configuration which maps ethN names to MAC addresses.

ifup/ifdown
Bring an inteface up or down.  Check in /etc/sysconfig/network-scripts/ifcfg-X
for a list of all the interfaces.
