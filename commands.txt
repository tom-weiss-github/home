lsb_release -i -r
Print vendor and version information of linux distribution.

find / -type f -size +1000k | xargs -n 1 ls -l --block-size=M
Find all files over 1000 kbs and then print the size of each of those
files in mbs.

df -h
Print disk usage.

lsof
Print open files (which may not be shown in find or ls if the file
has been deleted, but a file descriptor is still open).

ls | xargs -n 1 -i echo \{\}, | xargs -n 4
This command is to illustrate some features of xargs.  The \{\} combined
with -i allow the output from the piped command to be inserted in the
middle of the command xargs is building.  The -n allows some number of
inputs to be combined together.  This will print four items separated
by commas on each line.

find . -mtime +10 | xargs rm -v
Remove files older than 10 days.

echo -n `date +"%Y-%m-%d-%H-%M-%S"`; git log --abbrev-commit --graph --date-order --date=relative --pretty=oneline | head -1 | sed -e 's/^*[ \t]*/_/g' | sed 's/\ /_/g' | sed 's/[^a-zA-Z0-9_]//g'
Simple sed usage example.  Format the latest git log in a particular format.

grep af1518ac-c801-438e-b70d-4fc59e67a079 `lsoc bb1` | sed 's/.*order_sequence: //g' | sed 's/correlation_cl_ord_id.*//g' | sort | uniq --repeated
grep -c af1518ac-c801-438e-b70d-4fc59e67a079 `lsoc bb1` | sed 's/.*order_sequence: //g' | sed 's/correlation_cl_ord_id.*//g'
Command to parse log file for GUID and filter out most of the message.  the first sed removes everything before 'order_sequence: ' and
the second sed removes everything after.  The resuls are then sorted and passed to uniq to check for repeated fields.  To verify no skipped
values, the second command gives the total number.

for i in {1..10}; do command; done
Run a command in a loop on the command line.
